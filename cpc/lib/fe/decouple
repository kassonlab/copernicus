#!/usr/bin/env python

# This file is part of Copernicus
# http://www.copernicus-computing.org/
#
# Copyright (C) 2011-2015, Sander Pronk, Iman Pouya, Magnus Lundborg Erik Lindahl,
# and others.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as published
# by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


import sys
import os
import math
import os.path
try:
    from cStringIO import StringIO
except ImportError:
    from StringIO import StringIO

import cpc.dataflow
from cpc.dataflow import StringValue
from cpc.dataflow import FloatValue
from cpc.dataflow import IntValue
from cpc.dataflow import RecordValue
from cpc.dataflow import ArrayValue
from cpc.lib.gromacs import cmds

import fe_decouple


# read the input data
inf=StringIO()
inf.write(sys.stdin.read())
inf.seek(0)
sys.stderr.write("\n-----> Starting\n")
inf.seek(0)
inp=cpc.dataflow.readInput(inf)

if inp.testing():

    cmdnames = cmds.GromacsCommands()
    # TODO: make it possible for sub-functions to be checked now.
    cpc.util.plugin.testCommand("%s -version" % cmdnames.bar)
    cpc.util.plugin.testCommand("%s -version" % cmdnames.grompp)
    cpc.util.plugin.testCommand("%s -version" % cmdnames.trjconv)
    cpc.util.plugin.testCommand("%s -version" % cmdnames.gmxdump)
    # try to import msmproject and thereby msmbuilder
    sys.exit(0)



# prepare the output data
out=inp.getFunctionOutput()

mult=inp.getInput('multiplier')
if mult is None:
    mult=1

n_lambdas=inp.getInput('n_lambdas_init')
if n_lambdas is None:
    n_lambdas = 16

fe_decouple.decouple(inp, out, inp.getInput('relaxation_time'), mult, n_lambdas)

out.writeXML(sys.stdout)
#sys.stderr.write('\n')
#out.writeXML(sys.stderr)
#sys.stderr.write('\n')
sys.stderr.write("-----> Finished.\n")


